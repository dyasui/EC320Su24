---
name: multi
---

---

```{r}
#| echo: false
#| fig.align: center
#| fig.height: 6.75

ggplot(data = schools_dt, aes(x = stratio, y = score4)) +
  geom_point(color = hi, size = 3) +
  labs(
    title = "Relationship between test scores and class size",
    subtitle = "Test scores are aggregated math, reading, and science scores among 4th graders",
    y = "Test scores",
    x = "Class size"
  ) +
  mytheme

```

---

```{r}
#| echo: false
#| fig.align: center
#| fig.height: 6.75

ggplot(data = schools_dt, aes(x = stratio, y = score4, group = expgroup, color = expgroup)) +
  geom_point(size = 3) +
  scale_color_manual(values = c(hi, hii), labels = c("Per student expenditure < $6,000", "Per student expenditure > $6,000")) +
  # scale_x_log10() + scale_y_log10() +
  labs(
    title = "Relationship between test scores and class size",
    subtitle = "Test scores are aggregated math, reading, and science scores among 4th graders",
    y = "Test scores",
    x = "Class size",
    color = NULL
  ) +
  mytheme +
  theme(
    legend.position = c(0.8, 0.9),
    legend.text = element_text(size = 12),
    legend.background = element_rect(color = hi, size = 0.5)
  )

```


---

```{r}
#| echo: false
#| eval: true
#| cache: true
#| fig-height: 8
#| fig-width: 10

model = lm(score4 ~ stratio + exptot, data = schools_dt)

# Generate points for the regression plane
stratio_range = seq(min(schools_dt$stratio), max(schools_dt$stratio), length.out = 30)
exptot_range = seq(min(schools_dt$exptot), max(schools_dt$exptot), length.out = 30)
grid = expand.grid(stratio = stratio_range, exptot = exptot_range)
grid$score4 = predict(model, newdata = grid)

# Create 3D scatter plot with regression plane
plot_ly() %>%
  add_markers(data = schools_dt, x = ~stratio, y = ~exptot, z = ~score4,
              marker = list(size = 3), name = 'Data points') %>%
  add_surface(x = ~stratio_range, y = ~exptot_range, z = matrix(grid$score4, nrow = 30, ncol = 30),
              opacity = 0.5, showscale = FALSE, name = 'Regression plane') %>%
  layout(scene = list(
    xaxis = list(
      title = 'Class size',
      backgroundcolor = "white",
      gridcolor = "lightgrey",
      showbackground = TRUE,
      zerolinecolor = "lightgrey"
    ),
    yaxis = list(
      title = 'School Funding',
      backgroundcolor = "white",
      gridcolor = "lightgrey",
      showbackground = TRUE,
      zerolinecolor = "lightgrey"
    ),
    zaxis = list(
      title = 'Test scores',
      backgroundcolor = "white",
      gridcolor = "lightgrey",
      showbackground = TRUE,
      zerolinecolor = "lightgrey"
    ),
    aspectmode = "manual",
    aspectratio = list(x = 1, y = 1, z = 0.5)
  )) %>%
  layout(
    scene = list(
      camera = list(
        eye = list(x = 1.25, y = 1.25, z = 0.5)
      )
    )
  )
```


---

## Multiple linear regression

[Simple linear regression]{.note} features one [dependent variable]{.hi} and one [independent variable]{.hii}:

$$
\color{#434C5E}{Y_i} = \beta_0 + \beta_1 \color{"#81A1C1"}{X_i} + u_i
$$

[Multiple linear regression]{.note} features one [dependent variable]{.hi} and multiple [independent variables]{.hii}:

$$
\color{#434C5E}{Y_i} = \beta_0 + \beta_1 \color{"#81A1C1"}{X_{1i}} + \beta_2 \color{"#81A1C1"}{X_{2i}} + \cdots + \beta_{k} \color{"#81A1C1"}{X_{ki}} + u_i
$$

. . .

This serves more than one purpose. Multiple [independent variables]{.hii} improves predictions, avoids [OVB]{.hi-red}, and better explains variation in $Y$.

---

## Multiple linear regression [Ex.]{.ex}

Controlling for [school funding]{.hi}

$$
\text{Scores}_i = \beta_0 + \beta_1 \text{Class Size}_i + \beta_2  \text{Expenditure}_i+ u_i
$$

```{r}
#| echo: false
#| escape: false

m00 = fixest::feols(score4 ~ stratio, schools_dt)
m01 = fixest::feols(score4 ~ stratio + expreg, schools_dt)

tab <- data.frame(
  v1 = c("Intercept", "", "Class size", "", "Expenditure", ""),
  v2 = rbind(
    c(781.196, -3.768, ""),
    c("(16.46)", "(0.61)", "")
  ) %>% as.vector(),
  v3 = rbind(
    c(674.930, -0.960, "0.013"),
    c("(16.46)", "(0.64)", "(0.002)")
  ) %>% as.vector()
) %>% kable(
  escape = F,
  col.names = c("independent variable", "1", "2"),
  align = c("l", rep("c", 3)),
  caption = ""
) %>%
row_spec(1:6, color = hi) %>%
row_spec(seq(2,6,2), color = "#c2bebe") %>%
row_spec(1:6, extra_css = "line-height: 110%;") %>%
column_spec(1, color = "black", italic = T)
tab %>% column_spec(2, bold = T)

```

---

## Multiple linear regression [Ex.]{.ex} {data-visibility="uncounted"}

Controlling for [school funding]{.hi}

$$
\text{Scores}_i = \beta_0 + \beta_1 \text{Class Size}_i + \text{Expenditure}_i+ u_i
$$

```{r}
#| echo: false
#| escape: false

m00 = fixest::feols(score4 ~ stratio, schools_dt)
m01 = fixest::feols(score4 ~ stratio + expreg, schools_dt)

tab <- data.frame(
  v1 = c("Intercept", "", "Class size", "", "Expenditure", ""),
  v2 = rbind(
    c(781.196, -3.768, ""),
    c("(16.46)", "(0.61)", "")
  ) %>% as.vector(),
  v3 = rbind(
    c(674.930, -0.960, "0.013"),
    c("(16.46)", "(0.64)", "(0.002)")
  ) %>% as.vector()
) %>% kable(
  escape = F,
  col.names = c("independent variable", "1", "2"),
  align = c("l", rep("c", 3)),
  caption = ""
) %>%
row_spec(1:6, color = hi) %>%
row_spec(seq(2,6,2), color = "#c2bebe") %>%
row_spec(1:6, extra_css = "line-height: 110%;") %>%
column_spec(1, color = "black", italic = T)
tab %>% column_spec(3, bold = T)

```


---

::: {.middle}
_How does it work?_ [We can think of it almost like demeaning.]{.fragment}
:::

---

###### {data-visibility="uncounted"}

```{r}
#| echo: false
#| fig.align: center
#| fig.height: 6.75

ggplot(data = schools_dt, aes(x = stratio, y = score4)) +
  geom_point(color = hi, size = 3) +
  labs(
    title = "Relationship between test scores and class size",
    subtitle = "Test scores are aggregated math, reading, and science scores among 4th graders",
    y = "Test scores",
    x = "Class size"
  ) +
  mytheme

```

---

###### {data-visibility="uncounted"}

```{r}
#| echo: false
#| fig.align: center
#| fig.height: 6.75

ggplot(data = schools_dt, aes(x = stratio, y = score4, group = expgroup, color = expgroup)) +
  geom_point(size = 3) +
  scale_color_manual(values = c(hi, hii), labels = c("Per student expenditure < $6,000", "Per student expenditure > $6,000")) +
  # scale_x_log10() + scale_y_log10() +
  labs(
    title = "Relationship between test scores and class size",
    subtitle = "Test scores are aggregated math, reading, and science scores among 4th graders",
    y = "Test scores",
    x = "Class size",
    color = NULL
  ) +
  mytheme +
  theme(
    legend.position = c(0.8, 0.9),
    legend.text = element_text(size = 12),
    legend.background = element_rect(color = hi, size = 0.5)
  )

```


---

###### {data-visibility="uncounted"}

![](./control.gif)
```{r}
#| include: false
#| echo: false
#| eval: false


# Create the group means for each W
schools_dt[, `:=`(mean_stratio = mean(stratio), mean_score4 = mean(score4)), by = expgroup]


# Create six different data tables for the animation steps
dt_list <- list(
  #Step 1: Raw data only
  copy(schools_dt)[, c("mean_stratio", "mean_score4") := NA],
  #Step 2: Add x-lines
  copy(schools_dt)[, mean_score4 := NA],
  #Step 3: X de-meaned 
  copy(schools_dt)[, `:=`(stratio = stratio - mean_stratio, mean_stratio = 0, mean_score4 = NA)],
  #Step 4: Remove X lines, add Y
  copy(schools_dt)[, `:=`(stratio = stratio - mean_stratio, mean_stratio = NA)],
  #Step 5: Y de-meaned
  copy(schools_dt)[, `:=`(stratio = stratio - mean_stratio, score4 = score4 - mean_score4, mean_stratio = NA, mean_score4 = 0)],
  #Step 6: Raw demeaned data only
  copy(schools_dt)[, `:=`(stratio = stratio - mean_stratio, score4 = score4 - mean_score4, mean_stratio = NA, mean_score4 = NA)]
)

# Add time column and rbind all data tables together
time_labels <- c("1. Before correction", "2. Figure out what differences in class size are explained by student expenditure",
                 "3. Remove differences in class size explained by student expenditure", "4. Figure out what differences in test scores are explained by student expenditure",
                 "5. Remove differences in test scores explained by student expenditure", "6. After correction")

for (i in seq_along(dt_list)) {
  dt_list[[i]][, time := time_labels[i]]
}

# Combine all data tables into one
schools_dt_full <- rbindlist(dt_list)

# Create the animation
p <- ggplot(schools_dt_full, aes(x = stratio, y = score4, , group = expgroup, color = expgroup)) +
  geom_point(size = 2) +
  scale_color_manual(values = c(hi, hii), labels = c("Per student expenditure < $6,000", "Per student expenditure > $6,000")) +
  geom_vline(aes(xintercept = mean_stratio, color = as.factor(expgroup))) +
  geom_hline(aes(yintercept = mean_score4, color = as.factor(expgroup))) +
  guides(color = guide_legend(title = "expgroup")) +
  labs(
    title = 'Relationship between test scores and class size, controlling for a student expenditure \n{closest_state}',
    subtitle = "Test scores are aggregated math, reading, and science scores among 4th graders",
    y = "Test scores",
    x = "Class size",
    color = NULL
    ) +
  mytheme +
  theme(
    legend.position = c(0.8, 0.2),
    legend.text = element_text(size = 12),
    legend.background = element_rect(color = hi, size = 0.5)
  ) +
  transition_states(time, transition_length = 2, state_length = 1) +
  ease_aes('sine-in-out')



anim_save(
  animation = p,
  filename = "control.gif",
  path = "./slides/006-multiple/",  # change this to your desired directory
  width = 10.5,
  height = 7,
  units = "in",
  res = 150,
  nframes = 200
)
```

[What happens to [variation]{.hi-red} in $Y$ after we account for school funding?]{.fragment}
